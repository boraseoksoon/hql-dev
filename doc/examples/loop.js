// .hql-cache/1/doc/examples/loop.ts
(function() {
  function loop_0(i) {
    if (i < 3)
      return function() {
        console.log("Basic loop iteration:", i);
        return (() => loop_0(i + 1))();
      }();
    else
      return null;
  }
  return loop_0(0);
})();
var count = 0;
(function() {
  function loop_1() {
    if (count < 3)
      return function() {
        console.log("While iteration:", count);
        count = count + 1;
        return (() => loop_1())();
      }();
    else
      return null;
  }
  return loop_1();
})();
console.log("Final count:", count);
(function() {
  function loop_2(i) {
    if (i < 3)
      return function() {
        console.log("Repeat: Hello, world!");
        return (() => loop_2(i + 1))();
      }();
    else
      return null;
  }
  return loop_2(0);
})();
(function() {
  function loop_3(i) {
    if (i < 2)
      return function() {
        console.log("First line");
        console.log("Second line");
        return (() => loop_3(i + 1))();
      }();
    else
      return null;
  }
  return loop_3(0);
})();
(function() {
  function loop_4(i) {
    if (i < 3)
      return function() {
        console.log("Loop 1:", i);
        return (() => loop_4(i + 1))();
      }();
    else
      return null;
  }
  return loop_4(0);
})();
(function() {
  function loop_5(i) {
    if (i < 8)
      return function() {
        console.log("Loop 2:", i);
        return (() => loop_5(i + 1))();
      }();
    else
      return null;
  }
  return loop_5(0);
})();
(function() {
  function loop_6(i) {
    if (i < 10)
      return function() {
        console.log("Loop 3:", i);
        return (() => loop_6(i + 2))();
      }();
    else
      return null;
  }
  return loop_6(0);
})();
(function() {
  function loop_7(i) {
    if (i < 3)
      return function() {
        console.log("Named loop 1:", i);
        return (() => loop_7(i + 1))();
      }();
    else
      return null;
  }
  return loop_7(0);
})();
(function() {
  function loop_8(i) {
    if (i < 5)
      return function() {
        console.log("Named loop 2:", i);
        return (() => loop_8(i + 8))();
      }();
    else
      return null;
  }
  return loop_8(0);
})();
(function() {
  function loop_9(i) {
    if (i < 10)
      return function() {
        console.log("Named loop 3:", i);
        return (() => loop_9(i + 2))();
      }();
    else
      return null;
  }
  return loop_9(0);
})();
(function() {
  function loop_10(i) {
    if (i < 10)
      return function() {
        console.log("Named loop 4:", i);
        return (() => loop_10(i + 3))();
      }();
    else
      return null;
  }
  return loop_10(0);
})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLmhxbC1jYWNoZS8xL2RvYy9leGFtcGxlcy9sb29wLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfMChpKSB7XG4gICAgICAgIGlmIChpIDwgMylcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJCYXNpYyBsb29wIGl0ZXJhdGlvbjpcIiwgaSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzAoaSArIDEpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfMCgwKTtcbn0pKCk7XG5sZXQgY291bnQgPSAwO1xuKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBsb29wXzEoKSB7XG4gICAgICAgIGlmIChjb3VudCA8IDMpXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiV2hpbGUgaXRlcmF0aW9uOlwiLCBjb3VudCk7XG4gICAgICAgICAgICAgICAgY291bnQgPSBjb3VudCArIDE7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzEoKSkoKTtcbiAgICAgICAgICAgIH0oKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb29wXzEoKTtcbn0pKCk7XG5jb25zb2xlLmxvZyhcIkZpbmFsIGNvdW50OlwiLCBjb3VudCk7XG4oZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfMihpKSB7XG4gICAgICAgIGlmIChpIDwgMylcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJSZXBlYXQ6IEhlbGxvLCB3b3JsZCFcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzIoaSArIDEpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfMigwKTtcbn0pKCk7XG4oZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfMyhpKSB7XG4gICAgICAgIGlmIChpIDwgMilcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJGaXJzdCBsaW5lXCIpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU2Vjb25kIGxpbmVcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzMoaSArIDEpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfMygwKTtcbn0pKCk7XG4oZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfNChpKSB7XG4gICAgICAgIGlmIChpIDwgMylcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJMb29wIDE6XCIsIGkpO1xuICAgICAgICAgICAgICAgIHJldHVybiAoKCkgPT4gbG9vcF80KGkgKyAxKSkoKTtcbiAgICAgICAgICAgIH0oKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb29wXzQoMCk7XG59KSgpO1xuKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBsb29wXzUoaSkge1xuICAgICAgICBpZiAoaSA8IDgpXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTG9vcCAyOlwiLCBpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgpID0+IGxvb3BfNShpICsgMSkpKCk7XG4gICAgICAgICAgICB9KCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbG9vcF81KDApO1xufSkoKTtcbihmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gbG9vcF82KGkpIHtcbiAgICAgICAgaWYgKGkgPCAxMClcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJMb29wIDM6XCIsIGkpO1xuICAgICAgICAgICAgICAgIHJldHVybiAoKCkgPT4gbG9vcF82KGkgKyAyKSkoKTtcbiAgICAgICAgICAgIH0oKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb29wXzYoMCk7XG59KSgpO1xuKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBsb29wXzcoaSkge1xuICAgICAgICBpZiAoaSA8IDMpXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTmFtZWQgbG9vcCAxOlwiLCBpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgpID0+IGxvb3BfNyhpICsgMSkpKCk7XG4gICAgICAgICAgICB9KCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbG9vcF83KDApO1xufSkoKTtcbihmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gbG9vcF84KGkpIHtcbiAgICAgICAgaWYgKGkgPCA1KVxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk5hbWVkIGxvb3AgMjpcIiwgaSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzgoaSArIDgpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfOCgwKTtcbn0pKCk7XG4oZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfOShpKSB7XG4gICAgICAgIGlmIChpIDwgMTApXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTmFtZWQgbG9vcCAzOlwiLCBpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgpID0+IGxvb3BfOShpICsgMikpKCk7XG4gICAgICAgICAgICB9KCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbG9vcF85KDApO1xufSkoKTtcbihmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gbG9vcF8xMChpKSB7XG4gICAgICAgIGlmIChpIDwgMTApXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTmFtZWQgbG9vcCA0OlwiLCBpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgpID0+IGxvb3BfMTAoaSArIDMpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfMTAoMCk7XG59KSgpO1xuIl0sCiAgIm1hcHBpbmdzIjogIjtDQUFDLFdBQVk7QUFDVCxXQUFTLE9BQU8sR0FBRztBQUNmLFFBQUksSUFBSTtBQUNKLGFBQU8sV0FBWTtBQUNmLGdCQUFRLElBQUkseUJBQXlCLENBQUM7QUFDdEMsZ0JBQVEsTUFBTSxPQUFPLElBQUksQ0FBQyxHQUFHO0FBQUEsTUFD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
