// .hql-cache/1/doc/examples/loop.ts
(function() {
  function loop_4(i) {
    if (i < 3)
      return function() {
        console.log("Basic loop iteration:", i);
        return (() => loop_4(i + 1))();
      }();
    else
      return null;
  }
  return loop_4(0);
})();
var count = 0;
(function() {
  function loop_5() {
    if (count < 3)
      return function() {
        console.log("While iteration:", count);
        count = count + 1;
        return (() => loop_5())();
      }();
    else
      return null;
  }
  return loop_5();
})();
console.log("Final count:", count);
(function() {
  function loop_6(i) {
    if (i < 3)
      return function() {
        console.log("Repeat: Hello, world!");
        return (() => loop_6(i + 1))();
      }();
    else
      return null;
  }
  return loop_6(0);
})();
(function() {
  function loop_7(i) {
    if (i < 2)
      return function() {
        console.log("First line");
        console.log("Second line");
        return (() => loop_7(i + 1))();
      }();
    else
      return null;
  }
  return loop_7(0);
})();
(function() {
  function loop_8(i) {
    if (i < 3)
      return function() {
        console.log("Loop 1:", i);
        return (() => loop_8(i + 1))();
      }();
    else
      return null;
  }
  return loop_8(0);
})();
(function() {
  function loop_9(i) {
    if (i < 8)
      return function() {
        console.log("Loop 2:", i);
        return (() => loop_9(i + 1))();
      }();
    else
      return null;
  }
  return loop_9(0);
})();
(function() {
  function loop_10(i) {
    if (i < 10)
      return function() {
        console.log("Loop 3:", i);
        return (() => loop_10(i + 2))();
      }();
    else
      return null;
  }
  return loop_10(0);
})();
(function() {
  function loop_11(i) {
    if (i < 3)
      return function() {
        console.log("Named loop 1:", i);
        return (() => loop_11(i + 1))();
      }();
    else
      return null;
  }
  return loop_11(0);
})();
(function() {
  function loop_12(i) {
    if (i < 5)
      return function() {
        console.log("Named loop 2:", i);
        return (() => loop_12(i + 8))();
      }();
    else
      return null;
  }
  return loop_12(0);
})();
(function() {
  function loop_13(i) {
    if (i < 10)
      return function() {
        console.log("Named loop 3:", i);
        return (() => loop_13(i + 2))();
      }();
    else
      return null;
  }
  return loop_13(0);
})();
(function() {
  function loop_14(i) {
    if (i < 10)
      return function() {
        console.log("Named loop 4:", i);
        return (() => loop_14(i + 3))();
      }();
    else
      return null;
  }
  return loop_14(0);
})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLmhxbC1jYWNoZS8xL2RvYy9leGFtcGxlcy9sb29wLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfNChpKSB7XG4gICAgICAgIGlmIChpIDwgMylcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJCYXNpYyBsb29wIGl0ZXJhdGlvbjpcIiwgaSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzQoaSArIDEpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfNCgwKTtcbn0pKCk7XG5sZXQgY291bnQgPSAwO1xuKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBsb29wXzUoKSB7XG4gICAgICAgIGlmIChjb3VudCA8IDMpXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiV2hpbGUgaXRlcmF0aW9uOlwiLCBjb3VudCk7XG4gICAgICAgICAgICAgICAgY291bnQgPSBjb3VudCArIDE7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzUoKSkoKTtcbiAgICAgICAgICAgIH0oKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb29wXzUoKTtcbn0pKCk7XG5jb25zb2xlLmxvZyhcIkZpbmFsIGNvdW50OlwiLCBjb3VudCk7XG4oZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfNihpKSB7XG4gICAgICAgIGlmIChpIDwgMylcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJSZXBlYXQ6IEhlbGxvLCB3b3JsZCFcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzYoaSArIDEpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfNigwKTtcbn0pKCk7XG4oZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfNyhpKSB7XG4gICAgICAgIGlmIChpIDwgMilcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJGaXJzdCBsaW5lXCIpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU2Vjb25kIGxpbmVcIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzcoaSArIDEpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfNygwKTtcbn0pKCk7XG4oZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfOChpKSB7XG4gICAgICAgIGlmIChpIDwgMylcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJMb29wIDE6XCIsIGkpO1xuICAgICAgICAgICAgICAgIHJldHVybiAoKCkgPT4gbG9vcF84KGkgKyAxKSkoKTtcbiAgICAgICAgICAgIH0oKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb29wXzgoMCk7XG59KSgpO1xuKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBsb29wXzkoaSkge1xuICAgICAgICBpZiAoaSA8IDgpXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTG9vcCAyOlwiLCBpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgpID0+IGxvb3BfOShpICsgMSkpKCk7XG4gICAgICAgICAgICB9KCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbG9vcF85KDApO1xufSkoKTtcbihmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gbG9vcF8xMChpKSB7XG4gICAgICAgIGlmIChpIDwgMTApXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTG9vcCAzOlwiLCBpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgpID0+IGxvb3BfMTAoaSArIDIpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfMTAoMCk7XG59KSgpO1xuKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBsb29wXzExKGkpIHtcbiAgICAgICAgaWYgKGkgPCAzKVxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk5hbWVkIGxvb3AgMTpcIiwgaSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzExKGkgKyAxKSkoKTtcbiAgICAgICAgICAgIH0oKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb29wXzExKDApO1xufSkoKTtcbihmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gbG9vcF8xMihpKSB7XG4gICAgICAgIGlmIChpIDwgNSlcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJOYW1lZCBsb29wIDI6XCIsIGkpO1xuICAgICAgICAgICAgICAgIHJldHVybiAoKCkgPT4gbG9vcF8xMihpICsgOCkpKCk7XG4gICAgICAgICAgICB9KCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbG9vcF8xMigwKTtcbn0pKCk7XG4oZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGxvb3BfMTMoaSkge1xuICAgICAgICBpZiAoaSA8IDEwKVxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk5hbWVkIGxvb3AgMzpcIiwgaSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzEzKGkgKyAyKSkoKTtcbiAgICAgICAgICAgIH0oKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb29wXzEzKDApO1xufSkoKTtcbihmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gbG9vcF8xNChpKSB7XG4gICAgICAgIGlmIChpIDwgMTApXG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiTmFtZWQgbG9vcCA0OlwiLCBpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgpID0+IGxvb3BfMTQoaSArIDMpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfMTQoMCk7XG59KSgpO1xuIl0sCiAgIm1hcHBpbmdzIjogIjtDQUFDLFdBQVk7QUFDVCxXQUFTLE9BQU8sR0FBRztBQUNmLFFBQUksSUFBSTtBQUNKLGFBQU8sV0FBWTtBQUNmLGdCQUFRLElBQUkseUJBQXlCLENBQUM7QUFDdEMsZ0JBQVEsTUFBTSxPQUFPLElBQUksQ0FBQyxHQUFHO0FBQUEsTUFDakMsRUFBRTtBQUFBO0FBRUYsYUFBTztBQUFBLEVBQ2Y7QUFDQSxTQUFPLE9BQU8sQ0FBQztBQUNuQixHQUFHO0FBQ0gsSUFBSSxRQUFRO0FBQUEsQ0FDWCxXQUFZO0FBQ1QsV0FBUyxTQUFTO0FBQ2QsUUFBSSxRQUFRO0FBQ1IsYUFBTyxXQUFZO0FBQ2YsZ0JBQVEsSUFBSSxvQkFBb0IsS0FBSztBQUNyQyxnQkFBUSxRQUFRO0FBQ2hCLGdCQUFRLE1BQU0sT0FBTyxHQUFHO0FBQUEsTUFDNUIsRUFBRTtBQUFBO0FBRUYsYUFBTztBQUFBLEVBQ2Y7QUFDQSxTQUFPLE9BQU87QUFDbEIsR0FBRztBQUNILFFBQVEsSUFBSSxnQkFBZ0IsS0FBSztBQUFBLENBQ2hDLFdBQVk7QUFDVCxXQUFTLE9BQU8sR0FBRztBQUNmLFFBQUksSUFBSTtBQUNKLGFBQU8sV0FBWTtBQUNmLGdCQUFRLElBQUksdUJBQXVCO0FBQ25DLGdCQUFRLE1BQU0sT0FBTyxJQUFJLENBQUMsR0FBRztBQUFBLE1BQ2pDLEVBQUU7QUFBQTtBQUVGLGFBQU87QUFBQSxFQUNmO0FBQ0EsU0FBTyxPQUFPLENBQUM7QUFDbkIsR0FBRztBQUFBLENBQ0YsV0FBWTtBQUNULFdBQVMsT0FBTyxHQUFHO0FBQ2YsUUFBSSxJQUFJO0FBQ0osYUFBTyxXQUFZO0FBQ2YsZ0JBQVEsSUFBSSxZQUFZO0FBQ3hCLGdCQUFRLElBQUksYUFBYTtBQUN6QixnQkFBUSxNQUFNLE9BQU8sSUFBSSxDQUFDLEdBQUc7QUFBQSxNQUNqQyxFQUFFO0FBQUE7QUFFRixhQUFPO0FBQUEsRUFDZjtBQUNBLFNBQU8sT0FBTyxDQUFDO0FBQ25CLEdBQUc7QUFBQSxDQUNGLFdBQVk7QUFDVCxXQUFTLE9BQU8sR0FBRztBQUNmLFFBQUksSUFBSTtBQUNKLGFBQU8sV0FBWTtBQUNmLGdCQUFRLElBQUksV0FBVyxDQUFDO0FBQ3hCLGdCQUFRLE1BQU0sT0FBTyxJQUFJLENBQUMsR0FBRztBQUFBLE1BQ2pDLEVBQUU7QUFBQTtBQUVGLGFBQU87QUFBQSxFQUNmO0FBQ0EsU0FBTyxPQUFPLENBQUM7QUFDbkIsR0FBRztBQUFBLENBQ0YsV0FBWTtBQUNULFdBQVMsT0FBTyxHQUFHO0FBQ2YsUUFBSSxJQUFJO0FBQ0osYUFBTyxXQUFZO0FBQ2YsZ0JBQVEsSUFBSSxXQUFXLENBQUM7QUFDeEIsZ0JBQVEsTUFBTSxPQUFPLElBQUksQ0FBQyxHQUFHO0FBQUEsTUFDakMsRUFBRTtBQUFBO0FBRUYsYUFBTztBQUFBLEVBQ2Y7QUFDQSxTQUFPLE9BQU8sQ0FBQztBQUNuQixHQUFHO0FBQUEsQ0FDRixXQUFZO0FBQ1QsV0FBUyxRQUFRLEdBQUc7QUFDaEIsUUFBSSxJQUFJO0FBQ0osYUFBTyxXQUFZO0FBQ2YsZ0JBQVEsSUFBSSxXQUFXLENBQUM7QUFDeEIsZ0JBQVEsTUFBTSxRQUFRLElBQUksQ0FBQyxHQUFHO0FBQUEsTUFDbEMsRUFBRTtBQUFBO0FBRUYsYUFBTztBQUFBLEVBQ2Y7QUFDQSxTQUFPLFFBQVEsQ0FBQztBQUNwQixHQUFHO0FBQUEsQ0FDRixXQUFZO0FBQ1QsV0FBUyxRQUFRLEdBQUc7QUFDaEIsUUFBSSxJQUFJO0FBQ0osYUFBTyxXQUFZO0FBQ2YsZ0JBQVEsSUFBSSxpQkFBaUIsQ0FBQztBQUM5QixnQkFBUSxNQUFNLFFBQVEsSUFBSSxDQUFDLEdBQUc7QUFBQSxNQUNsQyxFQUFFO0FBQUE7QUFFRixhQUFPO0FBQUEsRUFDZjtBQUNBLFNBQU8sUUFBUSxDQUFDO0FBQ3BCLEdBQUc7QUFBQSxDQUNGLFdBQVk7QUFDVCxXQUFTLFFBQVEsR0FBRztBQUNoQixRQUFJLElBQUk7QUFDSixhQUFPLFdBQVk7QUFDZixnQkFBUSxJQUFJLGlCQUFpQixDQUFDO0FBQzlCLGdCQUFRLE1BQU0sUUFBUSxJQUFJLENBQUMsR0FBRztBQUFBLE1BQ2xDLEVBQUU7QUFBQTtBQUVGLGFBQU87QUFBQSxFQUNmO0FBQ0EsU0FBTyxRQUFRLENBQUM7QUFDcEIsR0FBRztBQUFBLENBQ0YsV0FBWTtBQUNULFdBQVMsUUFBUSxHQUFHO0FBQ2hCLFFBQUksSUFBSTtBQUNKLGFBQU8sV0FBWTtBQUNmLGdCQUFRLElBQUksaUJBQWlCLENBQUM7QUFDOUIsZ0JBQVEsTUFBTSxRQUFRLElBQUksQ0FBQyxHQUFHO0FBQUEsTUFDbEMsRUFBRTtBQUFBO0FBRUYsYUFBTztBQUFBLEVBQ2Y7QUFDQSxTQUFPLFFBQVEsQ0FBQztBQUNwQixHQUFHO0FBQUEsQ0FDRixXQUFZO0FBQ1QsV0FBUyxRQUFRLEdBQUc7QUFDaEIsUUFBSSxJQUFJO0FBQ0osYUFBTyxXQUFZO0FBQ2YsZ0JBQVEsSUFBSSxpQkFBaUIsQ0FBQztBQUM5QixnQkFBUSxNQUFNLFFBQVEsSUFBSSxDQUFDLEdBQUc7QUFBQSxNQUNsQyxFQUFFO0FBQUE7QUFFRixhQUFPO0FBQUEsRUFDZjtBQUNBLFNBQU8sUUFBUSxDQUFDO0FBQ3BCLEdBQUc7IiwKICAibmFtZXMiOiBbXQp9Cg==
