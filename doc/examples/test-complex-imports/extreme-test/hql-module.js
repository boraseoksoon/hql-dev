// .hql-cache/1/doc/examples/test-complex-imports/extreme-test/js-nested/deep-js.js
function deepJsFunction(x) {
  return (x + 15) * 2;
}

// .hql-cache/1/doc/examples/test-complex-imports/extreme-test/nested/nested-hql.ts
function nestedHqlFunction(x) {
  let deepResult = deepJsFunction(x);
  let arr = [1, 2, 3, 4, 5];
  return deepResult + (() => {
    try {
      const result = arr[2];
      return result !== void 0 ? result : arr(2);
    } catch (_) {
      return arr(2);
    }
  })();
}

// .hql-cache/1/doc/examples/test-complex-imports/extreme-test/hql-module.ts
function hqlFunction(x) {
  let nestedResult = nestedHqlFunction(x * 2);
  return nestedResult + 5;
}
export {
  hqlFunction
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLmhxbC1jYWNoZS8xL2RvYy9leGFtcGxlcy90ZXN0LWNvbXBsZXgtaW1wb3J0cy9leHRyZW1lLXRlc3QvanMtbmVzdGVkL2RlZXAtanMuanMiLCAiLi4vLi4vLi4vLi4vLmhxbC1jYWNoZS8xL2RvYy9leGFtcGxlcy90ZXN0LWNvbXBsZXgtaW1wb3J0cy9leHRyZW1lLXRlc3QvbmVzdGVkL25lc3RlZC1ocWwudHMiLCAiLi4vLi4vLi4vLi4vLmhxbC1jYWNoZS8xL2RvYy9leGFtcGxlcy90ZXN0LWNvbXBsZXgtaW1wb3J0cy9leHRyZW1lLXRlc3QvaHFsLW1vZHVsZS50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLy8gRGVlcCBKUyBtb2R1bGVcbi8vIFRoaXMgZGVtb25zdHJhdGVzIGNyb3NzLWJyYW5jaCBkZXBlbmRlbmNpZXNcblxuLy8gSW5zdGVhZCBvZiBpbXBvcnRpbmcgZnJvbSB0cy1tb2R1bGUgd2hpY2ggY3JlYXRlcyBhIGNpcmN1bGFyIGRlcGVuZGVuY3lcbi8vIGltcGxlbWVudCB0aGUgZnVuY3Rpb24gZGlyZWN0bHlcbi8vIGltcG9ydCB7IHRzRnVuY3Rpb24gfSBmcm9tICdmaWxlOi8vL1VzZXJzL3Nlb2tzb29uamFuZy9EZXNrdG9wL2hxbC8uaHFsLWNhY2hlLzEvZG9jL2V4YW1wbGVzL3Rlc3QtY29tcGxleC1pbXBvcnRzL2V4dHJlbWUtdGVzdC90cy1tb2R1bGUudHMnO1xuXG4vLyBEZWZpbmUgYSBmdW5jdGlvbiB0aGF0IHdvcmtzIGluZGVwZW5kZW50bHlcbmV4cG9ydCBmdW5jdGlvbiBkZWVwSnNGdW5jdGlvbih4KSB7XG4gIC8vIEVtdWxhdGUgdGhlIGJlaGF2aW9yIG9mIHRzRnVuY3Rpb24gd2l0aG91dCBpbXBvcnRpbmcgaXRcbiAgLy8gT3JpZ2luYWwgdHNGdW5jdGlvbiBhZGRzIDE1IHRvIHRoZSBpbnB1dFxuICByZXR1cm4gKHggKyAxNSkgKiAyOyAvLyBFcXVpdmFsZW50IHRvIHRzRnVuY3Rpb24oeCkgKiAyXG59ICIsICJpbXBvcnQgeyBkZWVwSnNGdW5jdGlvbiB9IGZyb20gXCJmaWxlOi8vL1VzZXJzL3Nlb2tzb29uamFuZy9EZXNrdG9wL2hxbC8uaHFsLWNhY2hlLzEvZG9jL2V4YW1wbGVzL3Rlc3QtY29tcGxleC1pbXBvcnRzL2V4dHJlbWUtdGVzdC9qcy1uZXN0ZWQvZGVlcC1qcy5qc1wiO1xuZnVuY3Rpb24gbmVzdGVkSHFsRnVuY3Rpb24oeCkge1xuICAgIGxldCBkZWVwUmVzdWx0ID0gZGVlcEpzRnVuY3Rpb24oeCk7XG4gICAgbGV0IGFyciA9IFsxLCAyLCAzLCA0LCA1XTtcbiAgICByZXR1cm4gZGVlcFJlc3VsdCArICgoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhcnJbMl07XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0ICE9PSB1bmRlZmluZWQgPyByZXN1bHQgOiBhcnIoMik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF8pIHtcbiAgICAgICAgICAgIHJldHVybiBhcnIoMik7XG4gICAgICAgIH1cbiAgICB9KSgpO1xufVxuZXhwb3J0IHsgbmVzdGVkSHFsRnVuY3Rpb24gfTtcbiIsICJpbXBvcnQgeyBuZXN0ZWRIcWxGdW5jdGlvbiB9IGZyb20gXCIvVXNlcnMvc2Vva3Nvb25qYW5nL0Rlc2t0b3AvaHFsLy5ocWwtY2FjaGUvMS9kb2MvZXhhbXBsZXMvdGVzdC1jb21wbGV4LWltcG9ydHMvZXh0cmVtZS10ZXN0L25lc3RlZC9uZXN0ZWQtaHFsLnRzXCI7XG5mdW5jdGlvbiBocWxGdW5jdGlvbih4KSB7XG4gICAgbGV0IG5lc3RlZFJlc3VsdCA9IG5lc3RlZEhxbEZ1bmN0aW9uKHggKiAyKTtcbiAgICByZXR1cm4gbmVzdGVkUmVzdWx0ICsgNTtcbn1cbmV4cG9ydCB7IGhxbEZ1bmN0aW9uIH07XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBUU8sU0FBUyxlQUFlLEdBQUc7QUFHaEMsVUFBUSxJQUFJLE1BQU07QUFDcEI7OztBQ1hBLFNBQVMsa0JBQWtCLEdBQUc7QUFDMUIsTUFBSSxhQUFhLGVBQWUsQ0FBQztBQUNqQyxNQUFJLE1BQU0sQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUM7QUFDeEIsU0FBTyxjQUFjLE1BQU07QUFDdkIsUUFBSTtBQUNBLFlBQU0sU0FBUyxJQUFJLENBQUM7QUFDcEIsYUFBTyxXQUFXLFNBQVksU0FBUyxJQUFJLENBQUM7QUFBQSxJQUNoRCxTQUNPLEdBQVA7QUFDSSxhQUFPLElBQUksQ0FBQztBQUFBLElBQ2hCO0FBQUEsRUFDSixHQUFHO0FBQ1A7OztBQ1pBLFNBQVMsWUFBWSxHQUFHO0FBQ3BCLE1BQUksZUFBZSxrQkFBa0IsSUFBSSxDQUFDO0FBQzFDLFNBQU8sZUFBZTtBQUMxQjsiLAogICJuYW1lcyI6IFtdCn0K
