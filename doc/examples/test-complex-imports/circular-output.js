// ../.hql-cache/doc/examples/test-complex-imports/extreme-test/circular/b.ts
function incrementCircular(x) {
  return myFunction(x) + 1;
}
console.log("Direct result from b.hql:", myFunction(20));

// ../.hql-cache/doc/examples/test-complex-imports/extreme-test/circular/a.ts
function myFunction(x) {
  return x + 10;
}
function getValueFromFunction(x) {
  return myFunction(x);
}
console.log("Result of function call:", getValueFromFunction(5));
console.log("Result of circular import function:", (() => {
  try {
    const result = incrementCircular[10];
    return result !== void 0 ? result : incrementCircular(10);
  } catch (_) {
    return incrementCircular(10);
  }
})());
var myCollection = ["a", "b", "c"];
console.log("Element from collection:", (() => {
  try {
    const result = myCollection[1];
    return result !== void 0 ? result : myCollection(1);
  } catch (_) {
    return myCollection(1);
  }
})());
export {
  myFunction
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLmhxbC1jYWNoZS9kb2MvZXhhbXBsZXMvdGVzdC1jb21wbGV4LWltcG9ydHMvZXh0cmVtZS10ZXN0L2NpcmN1bGFyL2IudHMiLCAiLi4vLi4vLi4vLmhxbC1jYWNoZS9kb2MvZXhhbXBsZXMvdGVzdC1jb21wbGV4LWltcG9ydHMvZXh0cmVtZS10ZXN0L2NpcmN1bGFyL2EudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImltcG9ydCB7IG15RnVuY3Rpb24gfSBmcm9tIFwiZmlsZTovLy9Vc2Vycy9zZW9rc29vbmphbmcvRGVza3RvcC9ocWwvLmhxbC1jYWNoZS9kb2MvZXhhbXBsZXMvdGVzdC1jb21wbGV4LWltcG9ydHMvZXh0cmVtZS10ZXN0L2NpcmN1bGFyL2EudHNcIjtcbmZ1bmN0aW9uIGluY3JlbWVudENpcmN1bGFyKHgpIHtcbiAgICByZXR1cm4gbXlGdW5jdGlvbih4KSArIDE7XG59XG5jb25zb2xlLmxvZyhcIkRpcmVjdCByZXN1bHQgZnJvbSBiLmhxbDpcIiwgbXlGdW5jdGlvbigyMCkpO1xuZXhwb3J0IHsgaW5jcmVtZW50Q2lyY3VsYXIgfTtcbiIsICJpbXBvcnQgeyBpbmNyZW1lbnRDaXJjdWxhciB9IGZyb20gXCIvVXNlcnMvc2Vva3Nvb25qYW5nL0Rlc2t0b3AvaHFsLy5ocWwtY2FjaGUvZG9jL2V4YW1wbGVzL3Rlc3QtY29tcGxleC1pbXBvcnRzL2V4dHJlbWUtdGVzdC9jaXJjdWxhci9iLnRzXCI7XG5mdW5jdGlvbiBteUZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4geCArIDEwO1xufVxuZnVuY3Rpb24gZ2V0VmFsdWVGcm9tRnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBteUZ1bmN0aW9uKHgpO1xufVxuY29uc29sZS5sb2coXCJSZXN1bHQgb2YgZnVuY3Rpb24gY2FsbDpcIiwgZ2V0VmFsdWVGcm9tRnVuY3Rpb24oNSkpO1xuY29uc29sZS5sb2coXCJSZXN1bHQgb2YgY2lyY3VsYXIgaW1wb3J0IGZ1bmN0aW9uOlwiLCAoKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGluY3JlbWVudENpcmN1bGFyWzEwXTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdCAhPT0gdW5kZWZpbmVkID8gcmVzdWx0IDogaW5jcmVtZW50Q2lyY3VsYXIoMTApO1xuICAgIH1cbiAgICBjYXRjaCAoXykge1xuICAgICAgICByZXR1cm4gaW5jcmVtZW50Q2lyY3VsYXIoMTApO1xuICAgIH1cbn0pKCkpO1xubGV0IG15Q29sbGVjdGlvbiA9IFtcImFcIiwgXCJiXCIsIFwiY1wiXTtcbmNvbnNvbGUubG9nKFwiRWxlbWVudCBmcm9tIGNvbGxlY3Rpb246XCIsICgoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gbXlDb2xsZWN0aW9uWzFdO1xuICAgICAgICByZXR1cm4gcmVzdWx0ICE9PSB1bmRlZmluZWQgPyByZXN1bHQgOiBteUNvbGxlY3Rpb24oMSk7XG4gICAgfVxuICAgIGNhdGNoIChfKSB7XG4gICAgICAgIHJldHVybiBteUNvbGxlY3Rpb24oMSk7XG4gICAgfVxufSkoKSk7XG5leHBvcnQgeyBteUZ1bmN0aW9uIH07XG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQ0EsU0FBUyxrQkFBa0IsR0FBRztBQUMxQixTQUFPLFdBQVcsQ0FBQyxJQUFJO0FBQzNCO0FBQ0EsUUFBUSxJQUFJLDZCQUE2QixXQUFXLEVBQUUsQ0FBQzs7O0FDSHZELFNBQVMsV0FBVyxHQUFHO0FBQ25CLFNBQU8sSUFBSTtBQUNmO0FBQ0EsU0FBUyxxQkFBcUIsR0FBRztBQUM3QixTQUFPLFdBQVcsQ0FBQztBQUN2QjtBQUNBLFFBQVEsSUFBSSw0QkFBNEIscUJBQXFCLENBQUMsQ0FBQztBQUMvRCxRQUFRLElBQUksd0NBQXdDLE1BQU07QUFDdEQsTUFBSTtBQUNBLFVBQU0sU0FBUyxrQkFBa0IsRUFBRTtBQUNuQyxXQUFPLFdBQVcsU0FBWSxTQUFTLGtCQUFrQixFQUFFO0FBQUEsRUFDL0QsU0FDTyxHQUFQO0FBQ0ksV0FBTyxrQkFBa0IsRUFBRTtBQUFBLEVBQy9CO0FBQ0osR0FBRyxDQUFDO0FBQ0osSUFBSSxlQUFlLENBQUMsS0FBSyxLQUFLLEdBQUc7QUFDakMsUUFBUSxJQUFJLDZCQUE2QixNQUFNO0FBQzNDLE1BQUk7QUFDQSxVQUFNLFNBQVMsYUFBYSxDQUFDO0FBQzdCLFdBQU8sV0FBVyxTQUFZLFNBQVMsYUFBYSxDQUFDO0FBQUEsRUFDekQsU0FDTyxHQUFQO0FBQ0ksV0FBTyxhQUFhLENBQUM7QUFBQSxFQUN6QjtBQUNKLEdBQUcsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
