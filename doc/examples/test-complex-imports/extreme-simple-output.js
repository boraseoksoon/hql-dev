var __defProp = Object.defineProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// ../doc/examples/test-complex-imports/extreme-test-simple/ts-module.ts
var ts_module_exports = {};
__export(ts_module_exports, {
  default: () => ts_module_default,
  tsFunction: () => tsFunction
});
function tsFunction(x) {
  return x * 3;
}
var ts_module_default = {
  tsFunction,
  multiplyBy: (x, y) => x * y
};

// ../.hql-cache/doc/examples/test-complex-imports/extreme-test-simple/circular/a.ts
var baseValue = 10;
function add5(value) {
  return value + 5;
}
function circularFunction() {
  let result = add5(baseValue);
  console.log("Calculation result:", result);
  return result;
}
circularFunction();

// ../.hql-cache/doc/examples/test-complex-imports/extreme-test-simple/entry.ts
var moduleTs = function() {
  const wrapper = ts_module_default !== void 0 ? ts_module_default : {};
  for (const [key, value] of Object.entries(ts_module_exports)) {
    if (key !== "default")
      wrapper[key] = value;
  }
  return wrapper;
}();
function extremeFunction() {
  let tsResult = moduleTs.tsFunction(30);
  let circResult = circularFunction;
  return tsResult + circResult;
}
console.log("TS module result:", moduleTs.tsFunction(15));
console.log("Circular result:", circularFunction);
console.log("Combined result:", extremeFunction());
export {
  extremeFunction
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiZXh0cmVtZS10ZXN0LXNpbXBsZS90cy1tb2R1bGUudHMiLCAiLi4vLi4vLi4vLmhxbC1jYWNoZS9kb2MvZXhhbXBsZXMvdGVzdC1jb21wbGV4LWltcG9ydHMvZXh0cmVtZS10ZXN0LXNpbXBsZS9jaXJjdWxhci9hLnRzIiwgIi4uLy4uLy4uLy5ocWwtY2FjaGUvZG9jL2V4YW1wbGVzL3Rlc3QtY29tcGxleC1pbXBvcnRzL2V4dHJlbWUtdGVzdC1zaW1wbGUvZW50cnkuaHFsIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvLyBUeXBlU2NyaXB0IG1vZHVsZSBmb3IgZXh0cmVtZSB0ZXN0XG4vLyBEZW1vbnN0cmF0ZXMgVFMgaW50ZWdyYXRpb24gd2l0aCBIUUxcblxuLy8gRXhwb3J0IGEgZnVuY3Rpb24gd2l0aCBUeXBlU2NyaXB0IHR5cGluZ1xuZXhwb3J0IGZ1bmN0aW9uIHRzRnVuY3Rpb24oeDogbnVtYmVyKTogbnVtYmVyIHtcbiAgcmV0dXJuIHggKiAzO1xufVxuXG4vLyBFeHBvcnQgYXMgZGVmYXVsdFxuZXhwb3J0IGRlZmF1bHQge1xuICB0c0Z1bmN0aW9uLFxuICBtdWx0aXBseUJ5OiAoeDogbnVtYmVyLCB5OiBudW1iZXIpOiBudW1iZXIgPT4geCAqIHlcbn07ICIsICJsZXQgYmFzZVZhbHVlID0gMTA7XG5mdW5jdGlvbiBhZGQ1KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICsgNTtcbn1cbmZ1bmN0aW9uIGNpcmN1bGFyRnVuY3Rpb24oKSB7XG4gICAgbGV0IHJlc3VsdCA9IGFkZDUoYmFzZVZhbHVlKTtcbiAgICBjb25zb2xlLmxvZyhcIkNhbGN1bGF0aW9uIHJlc3VsdDpcIiwgcmVzdWx0KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0IHsgY2lyY3VsYXJGdW5jdGlvbiB9O1xuY2lyY3VsYXJGdW5jdGlvbigpO1xuIiwgImltcG9ydCAqIGFzIG1vZHVsZVRzTW9kdWxlIGZyb20gXCIuL3RzLW1vZHVsZS50c1wiO1xuY29uc3QgbW9kdWxlVHMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHdyYXBwZXIgPSBtb2R1bGVUc01vZHVsZS5kZWZhdWx0ICE9PSB1bmRlZmluZWQgPyBtb2R1bGVUc01vZHVsZS5kZWZhdWx0IDoge307XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMobW9kdWxlVHNNb2R1bGUpKSB7XG4gICAgICAgIGlmIChrZXkgIT09IFwiZGVmYXVsdFwiKVxuICAgICAgICAgICAgd3JhcHBlcltrZXldID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiB3cmFwcGVyO1xufSkoKTtcbmltcG9ydCB7IGNpcmN1bGFyRnVuY3Rpb24gfSBmcm9tIFwiLi9jaXJjdWxhci9hLmhxbFwiO1xuZnVuY3Rpb24gZXh0cmVtZUZ1bmN0aW9uKCkge1xuICAgIGxldCB0c1Jlc3VsdCA9IG1vZHVsZVRzLnRzRnVuY3Rpb24oMzApO1xuICAgIGxldCBjaXJjUmVzdWx0ID0gY2lyY3VsYXJGdW5jdGlvbjtcbiAgICByZXR1cm4gdHNSZXN1bHQgKyBjaXJjUmVzdWx0O1xufVxuY29uc29sZS5sb2coXCJUUyBtb2R1bGUgcmVzdWx0OlwiLCBtb2R1bGVUcy50c0Z1bmN0aW9uKDE1KSk7XG5jb25zb2xlLmxvZyhcIkNpcmN1bGFyIHJlc3VsdDpcIiwgY2lyY3VsYXJGdW5jdGlvbik7XG5jb25zb2xlLmxvZyhcIkNvbWJpbmVkIHJlc3VsdDpcIiwgZXh0cmVtZUZ1bmN0aW9uKCkpO1xuZXhwb3J0IHsgZXh0cmVtZUZ1bmN0aW9uIH07XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUlPLFNBQVMsV0FBVyxHQUFtQjtBQUM1QyxTQUFPLElBQUk7QUFDYjtBQUdBLElBQU8sb0JBQVE7QUFBQSxFQUNiO0FBQUEsRUFDQSxZQUFZLENBQUMsR0FBVyxNQUFzQixJQUFJO0FBQ3BEOzs7QUNaQSxJQUFJLFlBQVk7QUFDaEIsU0FBUyxLQUFLLE9BQU87QUFDakIsU0FBTyxRQUFRO0FBQ25CO0FBQ0EsU0FBUyxtQkFBbUI7QUFDeEIsTUFBSSxTQUFTLEtBQUssU0FBUztBQUMzQixVQUFRLElBQUksdUJBQXVCLE1BQU07QUFDekMsU0FBTztBQUNYO0FBRUEsaUJBQWlCOzs7QUNUakIsSUFBTSxXQUFZLFdBQUE7QUFDZCxRQUFNLFVBQXlCLHNCQUFZLFNBQTJCLG9CQUFVLENBQUE7QUFDaEYsYUFBVyxDQUFDLEtBQUssS0FBSyxLQUFLLE9BQU8sUUFBUSxpQkFBYyxHQUFHO0FBQ3ZELFFBQUksUUFBUTtBQUNSLGNBQVEsR0FBRyxJQUFJO0VBQ3ZCO0FBQ0EsU0FBTztBQUNYLEVBQUU7QUFFRixTQUFTLGtCQUFlO0FBQ3BCLE1BQUksV0FBVyxTQUFTLFdBQVcsRUFBRTtBQUNyQyxNQUFJLGFBQWE7QUFDakIsU0FBTyxXQUFXO0FBQ3RCO0FBQ0EsUUFBUSxJQUFJLHFCQUFxQixTQUFTLFdBQVcsRUFBRSxDQUFDO0FBQ3hELFFBQVEsSUFBSSxvQkFBb0IsZ0JBQWdCO0FBQ2hELFFBQVEsSUFBSSxvQkFBb0IsZ0JBQWUsQ0FBRTsiLAogICJuYW1lcyI6IFtdCn0K
