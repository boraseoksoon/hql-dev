var __defProp = Object.defineProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};

// ../doc/examples/test-complex-imports/extreme-test-simple/ts-module.ts
var ts_module_exports = {};
__export(ts_module_exports, {
  default: () => ts_module_default,
  tsFunction: () => tsFunction
});
function tsFunction(x) {
  return x * 3;
}
var ts_module_default = {
  tsFunction,
  multiplyBy: (x, y) => x * y
};

// ../.hql-cache/doc/examples/test-complex-imports/extreme-test-simple/circular/a.ts
var baseValue = 10;
function add5(value) {
  return value + 5;
}
function circularFunction() {
  let result = add5(baseValue);
  console.log("Calculation result:", result);
  return result;
}
circularFunction();

// ../.hql-cache/doc/examples/test-complex-imports/extreme-test-simple/entry.ts
var moduleTs = function() {
  const wrapper = ts_module_default !== void 0 ? ts_module_default : {};
  for (const [key, value] of Object.entries(ts_module_exports)) {
    if (key !== "default")
      wrapper[key] = value;
  }
  return wrapper;
}();
function extremeFunction() {
  let tsResult = moduleTs.tsFunction(30);
  let circResult = circularFunction();
  return tsResult + circResult;
}
console.log("TS module result:", moduleTs.tsFunction(15));
console.log("Circular result:", circularFunction());
console.log("Combined result:", extremeFunction());
export {
  extremeFunction
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiZXh0cmVtZS10ZXN0LXNpbXBsZS90cy1tb2R1bGUudHMiLCAiLi4vLi4vLi4vLmhxbC1jYWNoZS9kb2MvZXhhbXBsZXMvdGVzdC1jb21wbGV4LWltcG9ydHMvZXh0cmVtZS10ZXN0LXNpbXBsZS9jaXJjdWxhci9hLnRzIiwgIi4uLy4uLy4uLy5ocWwtY2FjaGUvZG9jL2V4YW1wbGVzL3Rlc3QtY29tcGxleC1pbXBvcnRzL2V4dHJlbWUtdGVzdC1zaW1wbGUvZW50cnkudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8vIFR5cGVTY3JpcHQgbW9kdWxlIGZvciBleHRyZW1lIHRlc3Rcbi8vIERlbW9uc3RyYXRlcyBUUyBpbnRlZ3JhdGlvbiB3aXRoIEhRTFxuXG4vLyBFeHBvcnQgYSBmdW5jdGlvbiB3aXRoIFR5cGVTY3JpcHQgdHlwaW5nXG5leHBvcnQgZnVuY3Rpb24gdHNGdW5jdGlvbih4OiBudW1iZXIpOiBudW1iZXIge1xuICByZXR1cm4geCAqIDM7XG59XG5cbi8vIEV4cG9ydCBhcyBkZWZhdWx0XG5leHBvcnQgZGVmYXVsdCB7XG4gIHRzRnVuY3Rpb24sXG4gIG11bHRpcGx5Qnk6ICh4OiBudW1iZXIsIHk6IG51bWJlcik6IG51bWJlciA9PiB4ICogeVxufTsgIiwgImxldCBiYXNlVmFsdWUgPSAxMDtcbmZ1bmN0aW9uIGFkZDUodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgKyA1O1xufVxuZnVuY3Rpb24gY2lyY3VsYXJGdW5jdGlvbigpIHtcbiAgICBsZXQgcmVzdWx0ID0gYWRkNShiYXNlVmFsdWUpO1xuICAgIGNvbnNvbGUubG9nKFwiQ2FsY3VsYXRpb24gcmVzdWx0OlwiLCByZXN1bHQpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQgeyBjaXJjdWxhckZ1bmN0aW9uIH07XG5jaXJjdWxhckZ1bmN0aW9uKCk7XG4iLCAiaW1wb3J0ICogYXMgbW9kdWxlVHNNb2R1bGUgZnJvbSBcIi4vdHMtbW9kdWxlLnRzXCI7XG5jb25zdCBtb2R1bGVUcyA9IChmdW5jdGlvbiAoKSB7XG4gICAgY29uc3Qgd3JhcHBlciA9IG1vZHVsZVRzTW9kdWxlLmRlZmF1bHQgIT09IHVuZGVmaW5lZCA/IG1vZHVsZVRzTW9kdWxlLmRlZmF1bHQgOiB7fTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhtb2R1bGVUc01vZHVsZSkpIHtcbiAgICAgICAgaWYgKGtleSAhPT0gXCJkZWZhdWx0XCIpXG4gICAgICAgICAgICB3cmFwcGVyW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHdyYXBwZXI7XG59KSgpO1xuaW1wb3J0IHsgY2lyY3VsYXJGdW5jdGlvbiB9IGZyb20gXCIvVXNlcnMvc2Vva3Nvb25qYW5nL0Rlc2t0b3AvaHFsLy5ocWwtY2FjaGUvZG9jL2V4YW1wbGVzL3Rlc3QtY29tcGxleC1pbXBvcnRzL2V4dHJlbWUtdGVzdC1zaW1wbGUvY2lyY3VsYXIvYS50c1wiO1xuZnVuY3Rpb24gZXh0cmVtZUZ1bmN0aW9uKCkge1xuICAgIGxldCB0c1Jlc3VsdCA9IG1vZHVsZVRzLnRzRnVuY3Rpb24oMzApO1xuICAgIGxldCBjaXJjUmVzdWx0ID0gY2lyY3VsYXJGdW5jdGlvbigpO1xuICAgIHJldHVybiB0c1Jlc3VsdCArIGNpcmNSZXN1bHQ7XG59XG5jb25zb2xlLmxvZyhcIlRTIG1vZHVsZSByZXN1bHQ6XCIsIG1vZHVsZVRzLnRzRnVuY3Rpb24oMTUpKTtcbmNvbnNvbGUubG9nKFwiQ2lyY3VsYXIgcmVzdWx0OlwiLCBjaXJjdWxhckZ1bmN0aW9uKCkpO1xuY29uc29sZS5sb2coXCJDb21iaW5lZCByZXN1bHQ6XCIsIGV4dHJlbWVGdW5jdGlvbigpKTtcbmV4cG9ydCB7IGV4dHJlbWVGdW5jdGlvbiB9O1xuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJTyxTQUFTLFdBQVcsR0FBbUI7QUFDNUMsU0FBTyxJQUFJO0FBQ2I7QUFHQSxJQUFPLG9CQUFRO0FBQUEsRUFDYjtBQUFBLEVBQ0EsWUFBWSxDQUFDLEdBQVcsTUFBc0IsSUFBSTtBQUNwRDs7O0FDWkEsSUFBSSxZQUFZO0FBQ2hCLFNBQVMsS0FBSyxPQUFPO0FBQ2pCLFNBQU8sUUFBUTtBQUNuQjtBQUNBLFNBQVMsbUJBQW1CO0FBQ3hCLE1BQUksU0FBUyxLQUFLLFNBQVM7QUFDM0IsVUFBUSxJQUFJLHVCQUF1QixNQUFNO0FBQ3pDLFNBQU87QUFDWDtBQUVBLGlCQUFpQjs7O0FDVGpCLElBQU0sV0FBWSxXQUFZO0FBQzFCLFFBQU0sVUFBeUIsc0JBQVksU0FBMkIsb0JBQVUsQ0FBQztBQUNqRixhQUFXLENBQUMsS0FBSyxLQUFLLEtBQUssT0FBTyxRQUFRLGlCQUFjLEdBQUc7QUFDdkQsUUFBSSxRQUFRO0FBQ1IsY0FBUSxHQUFHLElBQUk7QUFBQSxFQUN2QjtBQUNBLFNBQU87QUFDWCxFQUFHO0FBRUgsU0FBUyxrQkFBa0I7QUFDdkIsTUFBSSxXQUFXLFNBQVMsV0FBVyxFQUFFO0FBQ3JDLE1BQUksYUFBYSxpQkFBaUI7QUFDbEMsU0FBTyxXQUFXO0FBQ3RCO0FBQ0EsUUFBUSxJQUFJLHFCQUFxQixTQUFTLFdBQVcsRUFBRSxDQUFDO0FBQ3hELFFBQVEsSUFBSSxvQkFBb0IsaUJBQWlCLENBQUM7QUFDbEQsUUFBUSxJQUFJLG9CQUFvQixnQkFBZ0IsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
