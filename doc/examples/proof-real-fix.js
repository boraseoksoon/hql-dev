// .hql-cache/1/doc/examples/proof-real-fix.ts
var nums = [100, 200, 300, 400, 500];
console.log("Test 1: Get in loop");
(function() {
  function loop_15(idx) {
    if (idx < 5)
      return function() {
        console.log("  nums[", idx, "] =", nums[idx]);
        return (() => loop_15(idx + 1))();
      }();
    else
      return null;
  }
  return loop_15(0);
})();
console.log("\\nTest 2: Nested loops");
var matrix = [[1, 2], [3, 4], [5, 6]];
(function() {
  function loop_16(i) {
    if (i < 3)
      return function() {
        (function() {
          function loop_17(j) {
            if (j < 2)
              return function() {
                console.log("  matrix[", i, "][", j, "] =", matrix[i][j]);
                return (() => loop_17(j + 1))();
              }();
            else
              return null;
          }
          return loop_17(0);
        })();
        return (() => loop_16(i + 1))();
      }();
    else
      return null;
  }
  return loop_16(0);
})();
console.log("\\nTest 3: Computed index");
(function() {
  function loop_18(x) {
    if (x < 3)
      return function() {
        let computed_idx = x * 2;
        console.log("  nums[", computed_idx, "] =", nums[computed_idx]);
        return (() => loop_18(x + 1))();
      }();
    else
      return null;
  }
  return loop_18(0);
})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLmhxbC1jYWNoZS8xL2RvYy9leGFtcGxlcy9wcm9vZi1yZWFsLWZpeC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsibGV0IG51bXMgPSBbMTAwLCAyMDAsIDMwMCwgNDAwLCA1MDBdO1xuY29uc29sZS5sb2coXCJUZXN0IDE6IEdldCBpbiBsb29wXCIpO1xuKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBsb29wXzE1KGlkeCkge1xuICAgICAgICBpZiAoaWR4IDwgNSlcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCIgIG51bXNbXCIsIGlkeCwgXCJdID1cIiwgbnVtc1tpZHhdKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgpID0+IGxvb3BfMTUoaWR4ICsgMSkpKCk7XG4gICAgICAgICAgICB9KCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbG9vcF8xNSgwKTtcbn0pKCk7XG5jb25zb2xlLmxvZyhcIlxcXFxuVGVzdCAyOiBOZXN0ZWQgbG9vcHNcIik7XG5sZXQgbWF0cml4ID0gW1sxLCAyXSwgWzMsIDRdLCBbNSwgNl1dO1xuKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBsb29wXzE2KGkpIHtcbiAgICAgICAgaWYgKGkgPCAzKVxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBsb29wXzE3KGopIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChqIDwgMilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIiAgbWF0cml4W1wiLCBpLCBcIl1bXCIsIGosIFwiXSA9XCIsIG1hdHJpeFtpXVtqXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoKCkgPT4gbG9vcF8xNyhqICsgMSkpKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBsb29wXzE3KDApO1xuICAgICAgICAgICAgICAgIH0pKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgoKSA9PiBsb29wXzE2KGkgKyAxKSkoKTtcbiAgICAgICAgICAgIH0oKTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBsb29wXzE2KDApO1xufSkoKTtcbmNvbnNvbGUubG9nKFwiXFxcXG5UZXN0IDM6IENvbXB1dGVkIGluZGV4XCIpO1xuKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBsb29wXzE4KHgpIHtcbiAgICAgICAgaWYgKHggPCAzKVxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBsZXQgY29tcHV0ZWRfaWR4ID0geCAqIDI7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCIgIG51bXNbXCIsIGNvbXB1dGVkX2lkeCwgXCJdID1cIiwgbnVtc1tjb21wdXRlZF9pZHhdKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKCgpID0+IGxvb3BfMTgoeCArIDEpKSgpO1xuICAgICAgICAgICAgfSgpO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGxvb3BfMTgoMCk7XG59KSgpO1xuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFBLElBQUksT0FBTyxDQUFDLEtBQUssS0FBSyxLQUFLLEtBQUssR0FBRztBQUNuQyxRQUFRLElBQUkscUJBQXFCO0FBQUEsQ0FDaEMsV0FBWTtBQUNULFdBQVMsUUFBUSxLQUFLO0FBQ2xCLFFBQUksTUFBTTtBQUNOLGFBQU8sV0FBWTtBQUNmLGdCQUFRLElBQUksV0FBVyxLQUFLLE9BQU8sS0FBSyxHQUFHLENBQUM7QUFDNUMsZ0JBQVEsTUFBTSxRQUFRLE1BQU0sQ0FBQyxHQUFHO0FBQUEsTUFDcEMsRUFBRTtBQUFBO0FBRUYsYUFBTztBQUFBLEVBQ2Y7QUFDQSxTQUFPLFFBQVEsQ0FBQztBQUNwQixHQUFHO0FBQ0gsUUFBUSxJQUFJLHlCQUF5QjtBQUNyQyxJQUFJLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUFBLENBQ25DLFdBQVk7QUFDVCxXQUFTLFFBQVEsR0FBRztBQUNoQixRQUFJLElBQUk7QUFDSixhQUFPLFdBQVk7QUFDZixTQUFDLFdBQVk7QUFDVCxtQkFBUyxRQUFRLEdBQUc7QUFDaEIsZ0JBQUksSUFBSTtBQUNKLHFCQUFPLFdBQVk7QUFDZix3QkFBUSxJQUFJLGFBQWEsR0FBRyxNQUFNLEdBQUcsT0FBTyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDeEQsd0JBQVEsTUFBTSxRQUFRLElBQUksQ0FBQyxHQUFHO0FBQUEsY0FDbEMsRUFBRTtBQUFBO0FBRUYscUJBQU87QUFBQSxVQUNmO0FBQ0EsaUJBQU8sUUFBUSxDQUFDO0FBQUEsUUFDcEIsR0FBRztBQUNILGdCQUFRLE1BQU0sUUFBUSxJQUFJLENBQUMsR0FBRztBQUFBLE1BQ2xDLEVBQUU7QUFBQTtBQUVGLGFBQU87QUFBQSxFQUNmO0FBQ0EsU0FBTyxRQUFRLENBQUM7QUFDcEIsR0FBRztBQUNILFFBQVEsSUFBSSwyQkFBMkI7QUFBQSxDQUN0QyxXQUFZO0FBQ1QsV0FBUyxRQUFRLEdBQUc7QUFDaEIsUUFBSSxJQUFJO0FBQ0osYUFBTyxXQUFZO0FBQ2YsWUFBSSxlQUFlLElBQUk7QUFDdkIsZ0JBQVEsSUFBSSxXQUFXLGNBQWMsT0FBTyxLQUFLLFlBQVksQ0FBQztBQUM5RCxnQkFBUSxNQUFNLFFBQVEsSUFBSSxDQUFDLEdBQUc7QUFBQSxNQUNsQyxFQUFFO0FBQUE7QUFFRixhQUFPO0FBQUEsRUFDZjtBQUNBLFNBQU8sUUFBUSxDQUFDO0FBQ3BCLEdBQUc7IiwKICAibmFtZXMiOiBbXQp9Cg==
