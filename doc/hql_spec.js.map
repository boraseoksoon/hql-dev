{
  "version": 3,
  "sources": ["hql_spec.js"],
  "sourcesContent": ["\n// Enhanced runtime functions for HQL transpilation\n\n/**\n * Helper for property access\n */\nfunction getProperty(obj, prop) {\n  const member = obj[prop];\n  return typeof member === \"function\" ? member.bind(obj) : member;\n}\n\n/**\n * Collection access function - get an element from a collection\n */\nfunction get(obj, key, notFound = null) {\n  // Handle null/undefined case\n  if (obj == null) return notFound;\n  \n  // Handle function case: call the function with key as argument\n  if (typeof obj === 'function') {\n    try {\n      return obj(key);\n    } catch (e) {\n      // If function call fails, fall back to property access\n      return (key in obj) ? obj[key] : notFound;\n    }\n  }\n  \n  // Handle arrays (vectors)\n  if (Array.isArray(obj)) {\n    return (typeof key === 'number' && key >= 0 && key < obj.length) \n      ? obj[key] \n      : notFound;\n  }\n  \n  // Handle Sets\n  if (obj instanceof Set) {\n    return obj.has(key) ? key : notFound;\n  }\n  \n  // Handle objects (maps) - includes handling of numeric keys\n  const propKey = typeof key === 'number' ? String(key) : key;\n  return (propKey in obj) ? obj[propKey] : notFound;\n}\n\n// ==== Type Predicates ====\n\n/**\n * Check if value is a symbol (string in JS representation)\n * In HQL: (symbol? value)\n */\nfunction symbol_pred(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Check if value is a list (array in JS representation)\n * In HQL: (list? value)\n */\nfunction list_pred(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Check if value is a map (object in JS representation)\n * In HQL: (map? value)\n */\nfunction map_pred(value) {\n  return value !== null && typeof value === 'object' && !Array.isArray(value) && !(value instanceof Set);\n}\n\n/**\n * Check if value is null\n * In HQL: (nil? value)\n */\nfunction nil_pred(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Check if collection is empty\n * In HQL: (empty? coll)\n */\nfunction empty_pred(coll) {\n  if (coll == null) return true;\n  if (Array.isArray(coll)) return coll.length === 0;\n  if (coll instanceof Set) return coll.size === 0;\n  if (typeof coll === 'object') return Object.keys(coll).length === 0;\n  return false;\n}\n\n// ==== Sequence Operations ====\n\n/**\n * Get the first item in a collection\n * In HQL: (first coll)\n */\nfunction first(coll) {\n  if (coll == null) return null;\n  if (Array.isArray(coll) && coll.length > 0) return coll[0];\n  return null;\n}\n\n/**\n * Get all items except the first\n * In HQL: (rest coll)\n */\nfunction rest(coll) {\n  if (coll == null) return [];\n  if (Array.isArray(coll)) return coll.slice(1);\n  return [];\n}\n\n/**\n * Get all items except the first, or null if collection has less than 2 items\n * In HQL: (next coll)\n */\nfunction next(coll) {\n  if (coll == null) return null;\n  if (Array.isArray(coll) && coll.length > 1) return coll.slice(1);\n  return null;\n}\n\n/**\n * Convert to a sequence or null if empty\n * In HQL: (seq coll)\n */\nfunction seq(coll) {\n  if (coll == null) return null;\n  if (Array.isArray(coll)) return coll.length > 0 ? coll : null;\n  if (coll instanceof Set) return coll.size > 0 ? Array.from(coll) : null;\n  if (typeof coll === 'object') {\n    const entries = Object.entries(coll);\n    return entries.length > 0 ? entries : null;\n  }\n  return null;\n}\n\n/**\n * Add items to a collection\n * In HQL: (conj coll & items)\n */\nfunction conj(coll, ...items) {\n  if (coll == null) return items;\n  if (Array.isArray(coll)) return [...coll, ...items];\n  if (coll instanceof Set) {\n    const newSet = new Set(coll);\n    items.forEach(item => newSet.add(item));\n    return newSet;\n  }\n  if (typeof coll === 'object') {\n    return { ...coll, ...Object.fromEntries(items) };\n  }\n  return coll;\n}\n\n/**\n * Combine collections\n * In HQL: (concat & colls)\n */\nfunction concat(...colls) {\n  return [].concat(...colls.map(coll => \n    coll == null ? [] : Array.isArray(coll) ? coll : [coll]\n  ));\n}\n\n/**\n * Create a list from arguments\n * In HQL: (list & items)\n */\nfunction list(...items) {\n  return items;\n}\n\n\nconst numbers = new Array();\nnumbers.push(1);\nnumbers.push(2);\nnumbers.push(3);\nnumbers.push(4);\nnumbers.push(5);\nnumbers.push(6);\nnumbers.push(7);\nconst pi = 3.14159;\nconst greeting = \"Hello, HQL World!\";\nconst is_awesome = true;\nconst symbol_x = \"x\";\nconst quoted_list = [1, 2, 3];\nconst quoted_expression = [\"+\", 1, [\"*\", 2, 3]];\n[1, 2, 3, 4, 5];\nnew Set([1, 2, 3, 4, 5]);\n({\n    key: \"value\"\n});\n[1, 2, 3, 4, 5];\nconst json = {\n    items: [1, 2, 3, 4, 5]\n};\njson.items;\nconst data = {\n    items: [5, 10, 15, 20, 25, 30, 35, 40],\n    factor: 2,\n    prefix: \"Value: \"\n};\ndata.items;\nconst empty_vector = [];\nconst mixed_types = [\"string\", 42, true, null];\nconst nested_vectors = [[1, 2], [3, 4]];\nconst empty_map = {};\nconst user = {\n    name: \"John\",\n    age: 30\n};\nconst nested_map = {\n    profile: {\n        id: 1,\n        settings: {\n            theme: \"dark\"\n        }\n    }\n};\nconst empty_set = new Set();\nconst unique_numbers = new Set([1, 2, 3, 4, 5]);\nconst unique_strings = new Set([\"apple\", \"banana\", \"cherry\"]);\nconst empty_list = [];\nconst simple_list = [1, 2, 3, 4, 5];\nconst mixed_list = [\"hello\", 42, true];\nconst vec_item = get(numbers, 2);\nconst map_value = get(user, \"name\");\nconst first_item = get(numbers, 0);\nconst second_item = get(numbers, 1);\nconst my_vector = [1, 2, 3, 4, 5];\nconst element2 = get(my_vector, 2);\nconst element3 = get(my_vector, 2);\nconst element4 = get(my_vector, 2);\nconst user2 = {\n    name: \"Alice\",\n    status: \"active\"\n};\nconsole.log(get(user2, \"name\"));\nconsole.log(user2.name);\nconsole.log(get(user2, [\"name\"]));\nconst my_list = list(\"a\", \"b\", \"c\");\nget(my_list, 1);\nconsole.log(get(my_list, 1));\nconst my_vector2 = [10, 20, 30];\nget(my_vector2, 2);\nconsole.log(get(my_vector2, 2));\nconst my_set = new Set([1, 2, 3]);\nconsole.log(get(my_set, 2));\nconsole.log(my_set.has(2));\nconsole.log(my_set.has(2));\nconst square = function (x) {\n    return x * x;\n};\nconst add_three = function (x, y, z) {\n    return x + (y + z);\n};\nconst abs = function (x) {\n    return x < 0 ? 0 - x : x;\n};\nconst factorial = function (n) {\n    return n <= 1 ? 1 : n * get(factorial, n - 1);\n};\nconsole.log(\"square : \", get(square, 10));\nconst calculate_area = function (radius) {\n    return function () {\n        const r_squared = get(square, radius);\n        const area = pi * r_squared;\n        return area;\n    };\n};\nconst complex_calculation = function (x, y) {\n    return function () {\n        const sum = x + y;\n        return function () {\n            const product = x * y;\n            const difference = x - y;\n            return list(sum, product, difference);\n        };\n    };\n};\nconst isLargerThan_pred = function (a, b) {\n    return a > b ? a : b;\n};\nconst between = function (x, min, max) {\n    return x >= min ? x <= max : x >= min;\n};\nconst outside = function (x, min, max) {\n    return function (or_result) {\n        return or_result ? or_result : x > max;\n    }(x < min);\n};\nconst not_between = function (x, min, max) {\n    return between(x, min, max) ? false : true;\n};\nconst validate_range = function (x) {\n    return (x >= 0 ? x < 10 : x >= 0) ? \"single digit\" : (x >= 10 ? x < 100 : x >= 10) ? \"double digit\" : null;\n};\nconst classify_number = function (x) {\n    return x < 0 ? \"negative\" : x === 0 ? \"zero\" : x < 10 ? \"small positive\" : x < 100 ? \"medium positive\" : true ? \"large positive\" : null;\n};\nconsole.log(get(classify_number, 10));\nconsole.log(get(classify_number, 100));\nconst arithmetic_demo = function (a, b) {\n    return list(a + b, a - b, a * b, a / b);\n};\nconst comparison_demo = function (a, b) {\n    return list(a === b, a !== b, a < b, a > b, a <= b, a >= b);\n};\nconst apply_twice = function (f, x) {\n    return get(f, get(f, x));\n};\nconst make_multiplier = function (n) {\n    return function (x) {\n        return x * n;\n    };\n};\nconst demonstration = function () {\n    return function () {\n        const double = get(make_multiplier, 2);\n        return get(double, 10);\n    };\n};\nconst log_all = function (...items) {\n    return console.log(items);\n};\nconst with_prefix = function (prefix, ...rest) {\n    return console.log(prefix, rest);\n};\nlog_all(1, 2, 3, 4, 5);\nwith_prefix(\"Numbers:\", 1, 2, 3);\nconst showcase = function (n) {\n    return function () {\n        const result = n < 0 ? \"Cannot compute for negative numbers\" : n === 0 ? \"Identity element for factorial\" : null;\n        return result ? result : function () {\n            const fact = get(factorial, n);\n            const msg = \"Factorial of \" + (n + \" is \" + fact);\n            console.log(msg);\n            return list(n, fact);\n        };\n    };\n};\nnumbers.push(8);\nconsole.log(numbers);\nconst pi_value = Math.PI;\nconst max_int_value = Number.MAX_SAFE_INTEGER;\nconst random_number = Math.random;\nconst current_timestamp = Date.now;\nconsole.log(\"Hello from HQL!\");\nconsole.warn(\"This is a warning\");\nconst date = new Date();\nconst current_year = date.getFullYear;\nconst month = date.getMonth;\nconst formatted_date = date.toLocaleDateString;\nconst abs_value = Math.abs(-42);\nconst rounded = Math.round(3.7);\nconst max_value = Math.max(1, 2, 3, 4, 5);\nimport * as pathModule from \"https://deno.land/std@0.170.0/path/mod.ts\";\nconst path = (function () {\n    const wrapper = pathModule.default !== undefined ? pathModule.default : {};\n    for (const [key, value] of Object.entries(pathModule)) {\n        if (key !== \"default\")\n            wrapper[key] = value;\n    }\n    return wrapper;\n})();\nconst joined_path = path.join(\"folder\", \"file.txt\");\nimport * as fileModule from \"https://deno.land/std@0.170.0/fs/mod.ts\";\nconst file = (function () {\n    const wrapper = fileModule.default !== undefined ? fileModule.default : {};\n    for (const [key, value] of Object.entries(fileModule)) {\n        if (key !== \"default\")\n            wrapper[key] = value;\n    }\n    return wrapper;\n})();\nconst exists = file.existsSync(\"example-dir\");\nimport * as expressModule from \"npm:express\";\nconst express = (function () {\n    const wrapper = expressModule.default !== undefined ? expressModule.default : {};\n    for (const [key, value] of Object.entries(expressModule)) {\n        if (key !== \"default\")\n            wrapper[key] = value;\n    }\n    return wrapper;\n})();\nconst app = express();\nconst router = express.Router;\napp.use(express.json);\nconst message = \"Hello, World!\";\nconst upper_message = message.toUpperCase;\nconst message_parts = message.split(\" \");\nconst array = [1, 2, 3];\narray.push(4);\narray.push(5);\nconsole.log(array);\nconst year = date.getFullYear;\nconst date_string = date.toISOString;\nconst nums = [1, 2, 3, 4, 5];\nconst filtered = nums.filter(function (x) {\n    return x > 2;\n});\nconst doubled = filtered.map(function (x) {\n    return x * 2;\n});\nconst sum = nums.reduce(function (a, b) {\n    return a + b;\n}, 0);\nconst max_sum = Math.max(sum, 10);\nconst config = {\n    db: {\n        user: {\n            name: \"admin\"\n        }\n    }\n};\nconst db_part = config.db;\nconst user_part = db_part.user;\nconst admin_name = user_part.name;\nconst get_user = function () {\n    return {\n        id: 1,\n        name: \"John\"\n    };\n};\nconst user_obj = get_user();\nconst user_name = user_obj.name;\nconst window_width = window.innerWidth;\nconst array_length = array.length;\nconst string_upper = message.toUpperCase;\nconst substring = message.substring(0, 5);\nconst replaced = message.replace(\"Hello\", \"Hi\");\nconst even_numbers = numbers.filter(function (n) {\n    return n % 2 === 0;\n});\nconst doubled_evens = even_numbers.map(function (n) {\n    return n * 2;\n});\nconsole.log(\"Doubled evens (step by step):\", doubled_evens);\n[1, 2, 3, 4, 5, 6, 7, 8].filter(function (n) {\n    return n > 5;\n}).length;\nconst chained_result = function () {\n    const filtered = numbers.filter(function (n) {\n        return n > 5;\n    });\n    const mapped = filtered.map(function (n) {\n        return n * 2;\n    });\n    return mapped.reduce(function (acc, n) {\n        return acc + n;\n    }, 0);\n};\nconsole.log(\"Sum of doubled numbers > 5:\", chained_result);\nconst direct_chain = numbers.filter(function (n) {\n    return n % 2 === 0;\n}).map(function (n) {\n    return n * 2;\n});\nconsole.log(\"Direct chain result:\", direct_chain);\nconsole.log(\"\\\\n----- Test 5: Complex Method Chaining -----\");\nconst complex_chain = numbers.filter(function (n) {\n    return n > 3;\n}).map(function (n) {\n    return n * 3;\n}).slice(0, 3);\nconsole.log(\"Complex chain result:\", complex_chain);\nconst sum_chain = numbers.filter(function (n) {\n    return n > 5;\n}).map(function (n) {\n    return n * 2;\n}).filter(function (n) {\n    return n % 4 === 0;\n}).reduce(function (acc, n) {\n    return acc + n;\n}, 0);\nconsole.log(\"Sum from complex chain:\", sum_chain);\nconst macro_x = 10;\nmacro_x > 5 ? console.log(\"macro_x is greater than 5\") : null;\nmacro_x < 5 ? null : console.log(\"macro_x is not less than 5\");\nconst hql_unless = function (x) {\n    return x ? null : x ? false : true;\n};\nconst x_plus_one = macro_x + 1;\nconst x_minus_one = macro_x - 1;\nconsole.log(x_plus_one);\nconsole.log(x_minus_one);\nconst symb = \"hello\";\nconst lst = [1, 2, 3];\nconst mp = {\n    name: \"John\"\n};\nsymbol_pred(symb);\nlist_pred(lst);\nmap_pred(mp);\nnil_pred(null);\nconst list_numbers = [1, 2, 3, 4, 5];\nfirst(list_numbers);\nrest(list_numbers);\nnext(list_numbers);\nseq(list_numbers);\nempty_pred([]);\nempty_pred(list_numbers);\nconst xs = [1, 2, 3];\nconst ys = [4, 5, 6];\nconj(xs, 4);\nconcat(xs, ys);\nconcat(xs, [], ys);\nconst xs2 = [1, 2, 3];\nconst ys2 = [4, 5, 6];\nconj(xs2, 4);\nconcat(xs2, ys2);\nconcat(xs2, [], ys2);\nconst first_name = \"John\";\nconst last_name = \"Doe\";\nconst full_name = first_name + \" \" + last_name;\nconsole.log(full_name);\nconst age = 30;\nconst bio = full_name + \" is \" + age + \" years old\";\nconsole.log(bio);\nconst score = 95;\nconst max_score = 100;\nconst percentage = score / max_score * 100;\nconst result_message = \"Score: \" + score + \"/\" + max_score + \" (\" + percentage + \"%)\";\nconsole.log(result_message);\nconst items = [\"apple\", \"banana\", \"orange\"];\nconst item_count = items.length;\nconst summary = \"Found \" + item_count + \" items: \" + get(items, 0) + \", \" + get(items, 1) + \", \" + get(items, 2);\nconsole.log(summary);\n(function (x) {\n    return function (y) {\n        return function (z) {\n            return x + y + z;\n        }(30);\n    }(20);\n})(10);\n(function (x) {\n    return console.log(x + 5);\n})(10);\n(function (x) {\n    return function (y) {\n        return x + y;\n    }(20);\n})(10);\n(function (outer) {\n    return function (inner) {\n        return outer * inner;\n    }(outer + 2);\n})(5);\n(function (sum) {\n    return function (product) {\n        return list(sum, product);\n    }(4 * 5);\n})(2 + 3);\nconst calculate = function (base) {\n    return function (squared) {\n        return function (cubed) {\n            return squared + cubed;\n        }(squared * base);\n    }(base * base);\n};\nget(calculate, 3);\nconst get_number = function () {\n    return 42;\n};\nconst get_nothing = function () {\n    return null;\n};\nconst get_zero = function () {\n    return 0;\n};\nconst get_string = function () {\n    return \"Hello\";\n};\nconst test_if_let_truthy_number = function () {\n    return function (x) {\n        return x ? \"Got number: \" + x : \"No number\";\n    }(get_number());\n};\nconst test_if_let_nil = function () {\n    return function (x) {\n        return x ? \"Got something: \" + x : \"Got nothing\";\n    }(get_nothing());\n};\nconst test_if_let_zero = function () {\n    return function (x) {\n        return x ? \"Got zero: \" + x : \"Zero is considered falsy\";\n    }(get_zero());\n};\nconst test_if_let_string = function () {\n    return function (x) {\n        return x ? \"Got string: \" + x : \"No string\";\n    }(get_string());\n};\nconst test_if_let_nested = function () {\n    return function (x) {\n        return x ? function (y) {\n            return y ? \"Nested test: x = \" + x + \", y = \" + y : \"Nested test: x = \" + x + \", no y\";\n        }(x > 40 ? get_string() : null) : \"No number\";\n    }(get_number());\n};\nconsole.log(test_if_let_truthy_number());\nconsole.log(test_if_let_nil());\nconsole.log(test_if_let_zero());\nconsole.log(test_if_let_string());\nconsole.log(test_if_let_nested());\n"],
  "mappings": "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",
  "names": ["items", "items", "rest", "filtered", "sum"]
}
